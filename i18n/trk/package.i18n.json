/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"extension.description": "Node.js için Visual Studio Code hata ayıklama eklentisi",
	"node.label": "Node.js",
	"open.loaded.script": "Yüklenen Betiği Aç",
	"toggle.skipping.this.file": "Bu Dosyayı Atlamayı Aç/Kapa",
	"loaded.scripts.view.name": "Yüklenen Betikler",
	"smartStep.description": "Orijinal kaynağa geri eşlenemeyen oluşturulmuş kodlar üzerinde otomatik olarak adım adım ilerleyin.",
	"skipFiles.description": "Hata ayıklama yapılırken atlanacak dosyalar için bir glob desenleri dizisi.",
	"outFiles.description": "Kaynak haritaları etkinleştirilmiş ise, bu glob desenleri oluşturulan JavaScript dosyalarını belirtir. '!' ile başlayan kalıpta dosyalar hariç tutulur. Eğer belirtilmemişse, oluşturulan kodun kaynağıyla aynı dizinde olması beklenir.",
	"outDir.deprecationMessage": "'outDir' özniteliği kullanım dışıdır, bunun yerine 'outFiles' özniteliğini kullanın.",
	"trace.description": "Teşhis çıktısı üretin. Bunu, \"true\" olarak ayarlamak yerine, bir veya birden fazla seçicileri virgülle ayrılmış şekilde listeleyebilirsiniz. 'ayrıntılı' seçicisi çok detaylı çıktıyı etkinleştirir.",
	"launch.args.description": "Programa iletilecek komut satırı argümanları.",
	"node.protocol.description": "Kullanılacak Node.js hata ayıklama protokolü.",
	"node.protocol.auto.description": "otomatik olarak en iyi protokolü tespit etmeye çalışın, Node 8.0+'ı başlatmak için 'denetçi'yi seçin",
	"node.protocol.inspector.description": "yeni protokol Node.js >= 6.3 sürümleri tarafından desteklenir",
	"node.protocol.legacy.description": "eski protokol Node.js < 8.0 sürümleri tarafından desteklenir",
	"node.sourceMaps.description": "JavaScript kaynak haritaları kullanın (varsa).",
	"node.stopOnEntry.description": "Başlatıldıktan sonra programı otomatik olarak durdur.",
	"node.port.description": "Bağlanacak hata ayıklama portu. Varsayılan 5858'tir.",
	"node.address.description": "Hata ayıklama yapılacak işlemin TCP/IP adresleri (sadece Node.js >= 5.0 için). Varsayılan 'localhost'tur.",
	"node.timeout.description": "Node.js'ye yeniden bağlanmak için bu sayıda milisaniye kadar tekrar deneyin. Varsayılan 10000 ms'dir.",
	"node.restart.description": "Node.js sonlandırıldıktan sonra oturumu yeniden başlatın.",
	"node.localRoot.description": "Programı içeren yerel klasörün yolu.",
	"node.remoteRoot.description": "Programı içeren uzak klasörün mutlak yolu.",
	"node.showAsyncStacks.description": "Geçerli çağrı yığınına götüren asenkron çağrıları gösterin. Sadece 'denetçi' protokolü ile kullanılır.",
	"node.launch.program.description": "Programın mutlak yolu. Değer, package.json ve açık olan dosyalara bakılarak tahmin edilerek oluşturulmuştur.",
	"node.launch.externalConsole.deprecationMessage": "'externalConsole' özniteliği kullanım dışıdır, bunun yerine 'console' özniteliğini kullanın.",
	"node.launch.console.description": "Hata ayıklama hedefinin başlatılacağı yer.",
	"node.launch.console.internalConsole.description": "VS Code Hata Ayıklama Konsolu (bir programdan girdi okumayı desteklemiyor)",
	"node.launch.console.integratedTerminal.description": "VS Code'un entegre terminali",
	"node.launch.console.externalTerminal.description": "kullanıcı ayarları üzerinden yapılandırılabilen harici terminal",
	"node.launch.cwd.description": "Hata ayıklama yapılan programın çalışma klasörünün mutlak yolu.",
	"node.launch.runtimeExecutable.description": "Kullanılacak çalışma zamanı. Mutlak bir yol veya PATH'da mevcut bir çalışma zamanı adı kullanılabilir. Eğer atlanırsa 'node' varsayılır.",
	"node.launch.runtimeArgs.description": "Çalışma zamanı yürütülebilir dosyasına iletilecek isteğe bağlı argümanlar.",
	"node.launch.env.description": "Programa iletilecek ortam değişkenleri.",
	"node.launch.envFile.description": "Ortam değişkenleri tanımlamalarını içeren bir dosyanın mutlak yolu.",
	"node.launch.config.name": "Başlat",
	"node.attach.processId.description": "Bağlanacak işlem Id'si.",
	"node.attach.config.name": "Bağla",
	"node.processattach.config.name": "İşleme Bağla",
	"node.snippet.launch.label": "Node.js: Programı Başlat",
	"node.snippet.launch.description": "Bir Node programını hata ayıklama modunda başlatın",
	"node.snippet.npm.label": "Node.js: NPM ile Başlat",
	"node.snippet.npm.description": "Bir node programını bir npm 'hata ayıklama' betiği ile başlatın",
	"node.snippet.attach.label": "Node.js: Bağla",
	"node.snippet.attach.description": "Çalışan bir node programına bağlayın",
	"node.snippet.remoteattach.label": "Node.js: Uzak Programa Bağla",
	"node.snippet.remoteattach.description": "Bir uzak node programınının hata ayıklama portuna bağlayın",
	"node.snippet.attachProcess.label": "Node.js: İşleme Bağla",
	"node.snippet.attachProcess.description": "Bağlanacak node veya gulp işlemini seçmek için işlem seçicisini açın",
	"node.snippet.nodemon.label": "Node.js: Nodemon Kurulumu",
	"node.snippet.nodemon.description": "Kaynak değişimlerinde bir hata ayıklama oturumunu yeniden başlatmak için nodemon kullanın",
	"node.snippet.mocha.label": "Node.js: Mocha Testleri",
	"node.snippet.mocha.description": "Mocha testlerinin hatalarını ayıkla",
	"node.snippet.yo.label": "Node.js: Yeoman oluşturucu",
	"node.snippet.yo.description": "Yeoman oluşturucunun hatalarını ayıkla (proje klasöründe 'npm link' komutunu çalıştırarak yükleyin)",
	"node.snippet.gulp.label": "Node.js: Gulp görevi",
	"node.snippet.gulp.description": "Gulp görevinin hatalarını ayıkla (projenizde gulp'ın yerel olarak yüklenmiş olduğundan emin olun)",
	"node.snippet.electron.label": "Node.js: Electron Ana İşlemi",
	"node.snippet.electron.description": "Electron ana işleminin hatalarını ayıkla"
}